/// @desc hewwo thewe owo uwu!!!
function ParConstants() {
	return "This script contains autogenerated enums and crap from Steamworks headers.";
	// enums k_ENameHere_Member get transpiled into ENameHere.k_Member for GML simplicity
}

// not really a Steam constant, but can be used for properly initializing null handles
#macro Par_NullHandle ( int64( 0 ) )

#macro STEAM_INPUT_MAX_COUNT (16)

#macro STEAM_INPUT_MAX_ANALOG_ACTIONS (16)

#macro STEAM_INPUT_MAX_DIGITAL_ACTIONS (128)

#macro STEAM_INPUT_MAX_ORIGINS (8)

#macro STEAM_INPUT_MAX_ACTIVE_LAYERS (16)

// When sending an option to a specific controller handle, you can send to all devices via this command
#macro STEAM_INPUT_HANDLE_ALL_CONTROLLERS (int64(-1))

#macro STEAM_INPUT_MIN_ANALOG_ACTION_DATA (-1.0)
#macro STEAM_INPUT_MAX_ANALOG_ACTION_DATA (1.0)

enum EInputSourceMode {
	k_None,
	k_Dpad,
	k_Buttons,
	k_FourButtons,
	k_AbsoluteMouse,
	k_RelativeMouse,
	k_JoystickMove,
	k_JoystickMouse,
	k_JoystickCamera,
	k_ScrollWheel,
	k_Trigger,
	k_TouchMenu,
	k_MouseJoystick,
	k_MouseRegion,
	k_RadialMenu,
	k_SingleButton,
	k_Switches
};

// Note: Please do not use action origins as a way to identify controller types. There is no
// guarantee that they will be added in a contiguous manner - use GetInputTypeForHandle instead.
// Versions of Steam that add new controller types in the future will extend this enum so if you're
// using a lookup table please check the bounds of any origins returned by Steam.
enum EInputActionOrigin {
	// Steam Controller
	k_None,
	k_SteamController_A,
	k_SteamController_B,
	k_SteamController_X,
	k_SteamController_Y,
	k_SteamController_LeftBumper,
	k_SteamController_RightBumper,
	k_SteamController_LeftGrip,
	k_SteamController_RightGrip,
	k_SteamController_Start,
	k_SteamController_Back,
	k_SteamController_LeftPad_Touch,
	k_SteamController_LeftPad_Swipe,
	k_SteamController_LeftPad_Click,
	k_SteamController_LeftPad_DPadNorth,
	k_SteamController_LeftPad_DPadSouth,
	k_SteamController_LeftPad_DPadWest,
	k_SteamController_LeftPad_DPadEast,
	k_SteamController_RightPad_Touch,
	k_SteamController_RightPad_Swipe,
	k_SteamController_RightPad_Click,
	k_SteamController_RightPad_DPadNorth,
	k_SteamController_RightPad_DPadSouth,
	k_SteamController_RightPad_DPadWest,
	k_SteamController_RightPad_DPadEast,
	k_SteamController_LeftTrigger_Pull,
	k_SteamController_LeftTrigger_Click,
	k_SteamController_RightTrigger_Pull,
	k_SteamController_RightTrigger_Click,
	k_SteamController_LeftStick_Move,
	k_SteamController_LeftStick_Click,
	k_SteamController_LeftStick_DPadNorth,
	k_SteamController_LeftStick_DPadSouth,
	k_SteamController_LeftStick_DPadWest,
	k_SteamController_LeftStick_DPadEast,
	k_SteamController_Gyro_Move,
	k_SteamController_Gyro_Pitch,
	k_SteamController_Gyro_Yaw,
	k_SteamController_Gyro_Roll,
	k_SteamController_Reserved0,
	k_SteamController_Reserved1,
	k_SteamController_Reserved2,
	k_SteamController_Reserved3,
	k_SteamController_Reserved4,
	k_SteamController_Reserved5,
	k_SteamController_Reserved6,
	k_SteamController_Reserved7,
	k_SteamController_Reserved8,
	k_SteamController_Reserved9,
	k_SteamController_Reserved10,
	
	// PS4 Dual Shock
	k_PS4_X,
	k_PS4_Circle,
	k_PS4_Triangle,
	k_PS4_Square,
	k_PS4_LeftBumper,
	k_PS4_RightBumper,
	k_PS4_Options,	//Start
	k_PS4_Share,		//Back
	k_PS4_LeftPad_Touch,
	k_PS4_LeftPad_Swipe,
	k_PS4_LeftPad_Click,
	k_PS4_LeftPad_DPadNorth,
	k_PS4_LeftPad_DPadSouth,
	k_PS4_LeftPad_DPadWest,
	k_PS4_LeftPad_DPadEast,
	k_PS4_RightPad_Touch,
	k_PS4_RightPad_Swipe,
	k_PS4_RightPad_Click,
	k_PS4_RightPad_DPadNorth,
	k_PS4_RightPad_DPadSouth,
	k_PS4_RightPad_DPadWest,
	k_PS4_RightPad_DPadEast,
	k_PS4_CenterPad_Touch,
	k_PS4_CenterPad_Swipe,
	k_PS4_CenterPad_Click,
	k_PS4_CenterPad_DPadNorth,
	k_PS4_CenterPad_DPadSouth,
	k_PS4_CenterPad_DPadWest,
	k_PS4_CenterPad_DPadEast,
	k_PS4_LeftTrigger_Pull,
	k_PS4_LeftTrigger_Click,
	k_PS4_RightTrigger_Pull,
	k_PS4_RightTrigger_Click,
	k_PS4_LeftStick_Move,
	k_PS4_LeftStick_Click,
	k_PS4_LeftStick_DPadNorth,
	k_PS4_LeftStick_DPadSouth,
	k_PS4_LeftStick_DPadWest,
	k_PS4_LeftStick_DPadEast,
	k_PS4_RightStick_Move,
	k_PS4_RightStick_Click,
	k_PS4_RightStick_DPadNorth,
	k_PS4_RightStick_DPadSouth,
	k_PS4_RightStick_DPadWest,
	k_PS4_RightStick_DPadEast,
	k_PS4_DPad_North,
	k_PS4_DPad_South,
	k_PS4_DPad_West,
	k_PS4_DPad_East,
	k_PS4_Gyro_Move,
	k_PS4_Gyro_Pitch,
	k_PS4_Gyro_Yaw,
	k_PS4_Gyro_Roll,
	k_PS4_DPad_Move,
	k_PS4_Reserved1,
	k_PS4_Reserved2,
	k_PS4_Reserved3,
	k_PS4_Reserved4,
	k_PS4_Reserved5,
	k_PS4_Reserved6,
	k_PS4_Reserved7,
	k_PS4_Reserved8,
	k_PS4_Reserved9,
	k_PS4_Reserved10,

	// XBox One
	k_XBoxOne_A,
	k_XBoxOne_B,
	k_XBoxOne_X,
	k_XBoxOne_Y,
	k_XBoxOne_LeftBumper,
	k_XBoxOne_RightBumper,
	k_XBoxOne_Menu,  //Start
	k_XBoxOne_View,  //Back
	k_XBoxOne_LeftTrigger_Pull,
	k_XBoxOne_LeftTrigger_Click,
	k_XBoxOne_RightTrigger_Pull,
	k_XBoxOne_RightTrigger_Click,
	k_XBoxOne_LeftStick_Move,
	k_XBoxOne_LeftStick_Click,
	k_XBoxOne_LeftStick_DPadNorth,
	k_XBoxOne_LeftStick_DPadSouth,
	k_XBoxOne_LeftStick_DPadWest,
	k_XBoxOne_LeftStick_DPadEast,
	k_XBoxOne_RightStick_Move,
	k_XBoxOne_RightStick_Click,
	k_XBoxOne_RightStick_DPadNorth,
	k_XBoxOne_RightStick_DPadSouth,
	k_XBoxOne_RightStick_DPadWest,
	k_XBoxOne_RightStick_DPadEast,
	k_XBoxOne_DPad_North,
	k_XBoxOne_DPad_South,
	k_XBoxOne_DPad_West,
	k_XBoxOne_DPad_East,
	k_XBoxOne_DPad_Move,
	k_XBoxOne_LeftGrip_Lower,
	k_XBoxOne_LeftGrip_Upper,
	k_XBoxOne_RightGrip_Lower,
	k_XBoxOne_RightGrip_Upper,
	k_XBoxOne_Share, // Xbox Series X controllers only
	k_XBoxOne_Reserved6,
	k_XBoxOne_Reserved7,
	k_XBoxOne_Reserved8,
	k_XBoxOne_Reserved9,
	k_XBoxOne_Reserved10,

	// XBox 360
	k_XBox360_A,
	k_XBox360_B,
	k_XBox360_X,
	k_XBox360_Y,
	k_XBox360_LeftBumper,
	k_XBox360_RightBumper,
	k_XBox360_Start,		//Start
	k_XBox360_Back,		//Back
	k_XBox360_LeftTrigger_Pull,
	k_XBox360_LeftTrigger_Click,
	k_XBox360_RightTrigger_Pull,
	k_XBox360_RightTrigger_Click,
	k_XBox360_LeftStick_Move,
	k_XBox360_LeftStick_Click,
	k_XBox360_LeftStick_DPadNorth,
	k_XBox360_LeftStick_DPadSouth,
	k_XBox360_LeftStick_DPadWest,
	k_XBox360_LeftStick_DPadEast,
	k_XBox360_RightStick_Move,
	k_XBox360_RightStick_Click,
	k_XBox360_RightStick_DPadNorth,
	k_XBox360_RightStick_DPadSouth,
	k_XBox360_RightStick_DPadWest,
	k_XBox360_RightStick_DPadEast,
	k_XBox360_DPad_North,
	k_XBox360_DPad_South,
	k_XBox360_DPad_West,
	k_XBox360_DPad_East,	
	k_XBox360_DPad_Move,
	k_XBox360_Reserved1,
	k_XBox360_Reserved2,
	k_XBox360_Reserved3,
	k_XBox360_Reserved4,
	k_XBox360_Reserved5,
	k_XBox360_Reserved6,
	k_XBox360_Reserved7,
	k_XBox360_Reserved8,
	k_XBox360_Reserved9,
	k_XBox360_Reserved10,


	// Switch - Pro or Joycons used as a single input device.
	// This does not apply to a single joycon
	k_Switch_A,
	k_Switch_B,
	k_Switch_X,
	k_Switch_Y,
	k_Switch_LeftBumper,
	k_Switch_RightBumper,
	k_Switch_Plus,	//Start
	k_Switch_Minus,	//Back
	k_Switch_Capture,
	k_Switch_LeftTrigger_Pull,
	k_Switch_LeftTrigger_Click,
	k_Switch_RightTrigger_Pull,
	k_Switch_RightTrigger_Click,
	k_Switch_LeftStick_Move,
	k_Switch_LeftStick_Click,
	k_Switch_LeftStick_DPadNorth,
	k_Switch_LeftStick_DPadSouth,
	k_Switch_LeftStick_DPadWest,
	k_Switch_LeftStick_DPadEast,
	k_Switch_RightStick_Move,
	k_Switch_RightStick_Click,
	k_Switch_RightStick_DPadNorth,
	k_Switch_RightStick_DPadSouth,
	k_Switch_RightStick_DPadWest,
	k_Switch_RightStick_DPadEast,
	k_Switch_DPad_North,
	k_Switch_DPad_South,
	k_Switch_DPad_West,
	k_Switch_DPad_East,
	k_Switch_ProGyro_Move,  // Primary Gyro in Pro Controller, or Right JoyCon
	k_Switch_ProGyro_Pitch,  // Primary Gyro in Pro Controller, or Right JoyCon
	k_Switch_ProGyro_Yaw,  // Primary Gyro in Pro Controller, or Right JoyCon
	k_Switch_ProGyro_Roll,  // Primary Gyro in Pro Controller, or Right JoyCon
	k_Switch_DPad_Move,
	k_Switch_Reserved1,
	k_Switch_Reserved2,
	k_Switch_Reserved3,
	k_Switch_Reserved4,
	k_Switch_Reserved5,
	k_Switch_Reserved6,
	k_Switch_Reserved7,
	k_Switch_Reserved8,
	k_Switch_Reserved9,
	k_Switch_Reserved10,

	// Switch JoyCon Specific
	k_Switch_RightGyro_Move,  // Right JoyCon Gyro generally should correspond to Pro's single gyro
	k_Switch_RightGyro_Pitch,  // Right JoyCon Gyro generally should correspond to Pro's single gyro
	k_Switch_RightGyro_Yaw,  // Right JoyCon Gyro generally should correspond to Pro's single gyro
	k_Switch_RightGyro_Roll,  // Right JoyCon Gyro generally should correspond to Pro's single gyro
	k_Switch_LeftGyro_Move,
	k_Switch_LeftGyro_Pitch,
	k_Switch_LeftGyro_Yaw,
	k_Switch_LeftGyro_Roll,
	k_Switch_LeftGrip_Lower, // Left JoyCon SR Button
	k_Switch_LeftGrip_Upper, // Left JoyCon SL Button
	k_Switch_RightGrip_Lower,  // Right JoyCon SL Button
	k_Switch_RightGrip_Upper,  // Right JoyCon SR Button
	k_Switch_Reserved11,
	k_Switch_Reserved12,
	k_Switch_Reserved13,
	k_Switch_Reserved14,
	k_Switch_Reserved15,
	k_Switch_Reserved16,
	k_Switch_Reserved17,
	k_Switch_Reserved18,
	k_Switch_Reserved19,
	k_Switch_Reserved20,
	
	// Added in SDK 1.51
	k_PS5_X,
	k_PS5_Circle,
	k_PS5_Triangle,
	k_PS5_Square,
	k_PS5_LeftBumper,
	k_PS5_RightBumper,
	k_PS5_Option,	//Start
	k_PS5_Create,		//Back
	k_PS5_Mute,
	k_PS5_LeftPad_Touch,
	k_PS5_LeftPad_Swipe,
	k_PS5_LeftPad_Click,
	k_PS5_LeftPad_DPadNorth,
	k_PS5_LeftPad_DPadSouth,
	k_PS5_LeftPad_DPadWest,
	k_PS5_LeftPad_DPadEast,
	k_PS5_RightPad_Touch,
	k_PS5_RightPad_Swipe,
	k_PS5_RightPad_Click,
	k_PS5_RightPad_DPadNorth,
	k_PS5_RightPad_DPadSouth,
	k_PS5_RightPad_DPadWest,
	k_PS5_RightPad_DPadEast,
	k_PS5_CenterPad_Touch,
	k_PS5_CenterPad_Swipe,
	k_PS5_CenterPad_Click,
	k_PS5_CenterPad_DPadNorth,
	k_PS5_CenterPad_DPadSouth,
	k_PS5_CenterPad_DPadWest,
	k_PS5_CenterPad_DPadEast,
	k_PS5_LeftTrigger_Pull,
	k_PS5_LeftTrigger_Click,
	k_PS5_RightTrigger_Pull,
	k_PS5_RightTrigger_Click,
	k_PS5_LeftStick_Move,
	k_PS5_LeftStick_Click,
	k_PS5_LeftStick_DPadNorth,
	k_PS5_LeftStick_DPadSouth,
	k_PS5_LeftStick_DPadWest,
	k_PS5_LeftStick_DPadEast,
	k_PS5_RightStick_Move,
	k_PS5_RightStick_Click,
	k_PS5_RightStick_DPadNorth,
	k_PS5_RightStick_DPadSouth,
	k_PS5_RightStick_DPadWest,
	k_PS5_RightStick_DPadEast,
	k_PS5_DPad_North,
	k_PS5_DPad_South,
	k_PS5_DPad_West,
	k_PS5_DPad_East,
	k_PS5_Gyro_Move,
	k_PS5_Gyro_Pitch,
	k_PS5_Gyro_Yaw,
	k_PS5_Gyro_Roll,
	k_PS5_DPad_Move,
	k_PS5_Reserved1,
	k_PS5_Reserved2,
	k_PS5_Reserved3,
	k_PS5_Reserved4,
	k_PS5_Reserved5,
	k_PS5_Reserved6,
	k_PS5_Reserved7,
	k_PS5_Reserved8,
	k_PS5_Reserved9,
	k_PS5_Reserved10,
	k_PS5_Reserved11,
	k_PS5_Reserved12,
	k_PS5_Reserved13,
	k_PS5_Reserved14,
	k_PS5_Reserved15,
	k_PS5_Reserved16,
	k_PS5_Reserved17,
	k_PS5_Reserved18,
	k_PS5_Reserved19,
	k_PS5_Reserved20,

	// Added in SDK 1.53
	k_SteamDeck_A,
	k_SteamDeck_B,
	k_SteamDeck_X,
	k_SteamDeck_Y,
	k_SteamDeck_L1,
	k_SteamDeck_R1,
	k_SteamDeck_Menu,
	k_SteamDeck_View,
	k_SteamDeck_LeftPad_Touch,
	k_SteamDeck_LeftPad_Swipe,
	k_SteamDeck_LeftPad_Click,
	k_SteamDeck_LeftPad_DPadNorth,
	k_SteamDeck_LeftPad_DPadSouth,
	k_SteamDeck_LeftPad_DPadWest,
	k_SteamDeck_LeftPad_DPadEast,
	k_SteamDeck_RightPad_Touch,
	k_SteamDeck_RightPad_Swipe,
	k_SteamDeck_RightPad_Click,
	k_SteamDeck_RightPad_DPadNorth,
	k_SteamDeck_RightPad_DPadSouth,
	k_SteamDeck_RightPad_DPadWest,
	k_SteamDeck_RightPad_DPadEast,
	k_SteamDeck_L2_SoftPull,
	k_SteamDeck_L2,
	k_SteamDeck_R2_SoftPull,
	k_SteamDeck_R2,
	k_SteamDeck_LeftStick_Move,
	k_SteamDeck_L3,
	k_SteamDeck_LeftStick_DPadNorth,
	k_SteamDeck_LeftStick_DPadSouth,
	k_SteamDeck_LeftStick_DPadWest,
	k_SteamDeck_LeftStick_DPadEast,
	k_SteamDeck_LeftStick_Touch,
	k_SteamDeck_RightStick_Move,
	k_SteamDeck_R3,
	k_SteamDeck_RightStick_DPadNorth,
	k_SteamDeck_RightStick_DPadSouth,
	k_SteamDeck_RightStick_DPadWest,
	k_SteamDeck_RightStick_DPadEast,
	k_SteamDeck_RightStick_Touch,
	k_SteamDeck_L4,
	k_SteamDeck_R4,
	k_SteamDeck_L5,
	k_SteamDeck_R5,
	k_SteamDeck_DPad_Move,
	k_SteamDeck_DPad_North,
	k_SteamDeck_DPad_South,
	k_SteamDeck_DPad_West,
	k_SteamDeck_DPad_East,
	k_SteamDeck_Gyro_Move,
	k_SteamDeck_Gyro_Pitch,
	k_SteamDeck_Gyro_Yaw,
	k_SteamDeck_Gyro_Roll,
	k_SteamDeck_Reserved1,
	k_SteamDeck_Reserved2,
	k_SteamDeck_Reserved3,
	k_SteamDeck_Reserved4,
	k_SteamDeck_Reserved5,
	k_SteamDeck_Reserved6,
	k_SteamDeck_Reserved7,
	k_SteamDeck_Reserved8,
	k_SteamDeck_Reserved9,
	k_SteamDeck_Reserved10,
	k_SteamDeck_Reserved11,
	k_SteamDeck_Reserved12,
	k_SteamDeck_Reserved13,
	k_SteamDeck_Reserved14,
	k_SteamDeck_Reserved15,
	k_SteamDeck_Reserved16,
	k_SteamDeck_Reserved17,
	k_SteamDeck_Reserved18,
	k_SteamDeck_Reserved19,
	k_SteamDeck_Reserved20,

	k_Count, // If Steam has added support for new controllers origins will go here.
	k_MaximumPossibleValue = 32767, // Origins are currently a maximum of 16 bits.
};

enum EXboxOrigin {
	k_A,
	k_B,
	k_X,
	k_Y,
	k_LeftBumper,
	k_RightBumper,
	k_Menu,  //Start
	k_View,  //Back
	k_LeftTrigger_Pull,
	k_LeftTrigger_Click,
	k_RightTrigger_Pull,
	k_RightTrigger_Click,
	k_LeftStick_Move,
	k_LeftStick_Click,
	k_LeftStick_DPadNorth,
	k_LeftStick_DPadSouth,
	k_LeftStick_DPadWest,
	k_LeftStick_DPadEast,
	k_RightStick_Move,
	k_RightStick_Click,
	k_RightStick_DPadNorth,
	k_RightStick_DPadSouth,
	k_RightStick_DPadWest,
	k_RightStick_DPadEast,
	k_DPad_North,
	k_DPad_South,
	k_DPad_West,
	k_DPad_East,
	k_Count,
};

enum ESteamControllerPad {
	k_Left,
	k_Right
};

enum EControllerHapticLocation {
	k_Left = ( 1 << ESteamControllerPad.k_Left ),
	k_Right = ( 1 << ESteamControllerPad.k_Right ),
	k_Both = ( 1 << ESteamControllerPad.k_Left | 1 << ESteamControllerPad.k_Right ),
};

enum EControllerHapticType {
	k_Off,
	k_Tick,
	k_Click,
};

enum ESteamInputType {
	k_Unknown,
	k_SteamController,
	k_XBox360Controller,
	k_XBoxOneController,
	k_GenericGamepad,		// DirectInput controllers
	k_PS4Controller,
	k_AppleMFiController,	// Unused
	k_AndroidController,	// Unused
	k_SwitchJoyConPair,		// Unused
	k_SwitchJoyConSingle,	// Unused
	k_SwitchProController,
	k_MobileTouch,			// Steam Link App On-screen Virtual Controller
	k_PS3Controller,		// Currently uses PS4 Origins
	k_PS5Controller,		// Added in SDK 151
	k_SteamDeckController,	// Added in SDK 153
	k_Count,
	k_MaximumPossibleValue = 255,
};

// Individual values are used by the GetSessionInputConfigurationSettings bitmask
enum ESteamInputConfigurationEnableType {
	k_None			= 0x0000,
	k_Playstation	= 0x0001,
	k_Xbox			= 0x0002,
	k_Generic		= 0x0004,
	k_Switch		= 0x0008,
};

// These values are passed into SetLEDColor
enum ESteamInputLEDFlag {
	k_SetColor,
	// Restore the LED color to the user's preference setting as set in the controller personalization menu.
	// This also happens automatically on exit of your game.  
	k_RestoreUserDefault 
};

// These values are passed into GetGlyphPNGForActionOrigin
enum ESteamInputGlyphSize {
	k_Small,	// 32x32 pixels
	k_Medium,	// 128x128 pixels
	k_Large,	// 256x256 pixels
	k_Count,
};

enum ESteamInputGlyphStyle {
	// Base-styles - cannot mix
	k_Knockout 	= 0x0, // Face buttons will have colored labels/outlines on a knocked out background
										   // Rest of inputs will have white detail/borders on a knocked out background
	k_Light		= 0x1, // Black detail/borders on a white background
	k_Dark 		= 0x2, // White detail/borders on a black background

	// Modifiers
	// Default ABXY/PS equivalent glyphs have a solid fill w/ color matching the physical buttons on the device
	k_NeutralColorABXY 	= 0x10, // ABXY Buttons will match the base style color instead of their normal associated color
	k_SolidABXY 		= 0x20,	// ABXY Buttons will have a solid fill
};

enum ESteamInputActionEventType {
	k_DigitalAction,
	k_AnalogAction,
};

enum EFloatingGamepadTextInputMode {
	k_ModeSingleLine = 0, // Enter dismisses the keyboard
	k_ModeMultipleLines = 1, // User needs to explictly close the keyboard
	k_ModeEmail = 2,
	k_ModeNumeric = 3,

};

// Input modes for the Big Picture gamepad text entry
enum EGamepadTextInputMode {
	k_Normal = 0,
	k_Password = 1
};

// Controls number of allowed lines for the Big Picture gamepad text entry
enum EGamepadTextInputLineMode {
	k_SingleLine = 0,
	k_MultipleLines = 1
};

// The context where text filtering is being done
enum ETextFilteringContext {
	k_Unknown = 0,	// Unknown context
	k_GameContent = 1,	// Game content, only legally required filtering is performed
	k_Chat = 2,	// Chat from another player
	k_Name = 3,	// Character or item name
};

enum ERemoteStorageLocalFileChange {
	k_Invalid = 0,

	// The file was updated from another device
	k_FileUpdated = 1,

	// The file was deleted by another device
	k_FileDeleted = 2,
};

enum ERemoteStorageFilePathType {
	k_Invalid = 0,
	
	// The file is directly accessed by the game and this is the full path
	k_Absolute = 1,

	// The file is accessed via the ISteamRemoteStorage API and this is the filename
	k_APIFilename = 2,
};

// Steam API call failure results
enum ESteamAPICallFailure {
	k_None = -1,			// no failure
	k_SteamGone = 0,		// the local Steam process has gone away
	k_NetworkFailure = 1,	// the network connection to Steam has been broken, or was already broken
	// SteamServersDisconnected_t callback will be sent around the same time
	// SteamServersConnected_t will be sent when the client is able to talk to the Steam servers again
	k_InvalidHandle = 2,	// the SteamAPICall_t handle passed in no longer exists
	k_MismatchedCallback = 3,	// GetAPICallResult() was called with the wrong callback type for this API call
};

enum ECheckFileSignature {
	k_InvalidSignature = 0,
	k_ValidSignature = 1,
	k_FileNotFound = 2,
	k_NoSignaturesFoundForThisApp = 3,
	k_NoSignaturesFoundForThisFile = 4,
};

